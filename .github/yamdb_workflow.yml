name: React and Symfony CI

on: [push]
env:
  env_var: ${{ vars.ENV_CONTEXT_VAR }}

jobs:
  build_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      needs: tests
      steps:
        - name: Check out the repo
          uses: actions/checkout@v2 
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1 
        - name: Login to Docker 
          uses: docker/login-action@v1 
          with:
            username: ${{ secrets.USERNAME_DOCKER_HUB }}  
            password: ${{ secrets.PASSWORD_DOCKER_HUB }}  
        - name: Build and Push Nginx image
          uses: docker/build-push-action@v2 
          with:
            push: true
            file: ./nginx.conf
            tags: kapshtykas/nginx
        - name: Build and Push DB image
          uses: docker/build-push-action@v2 
          with:
            push: true
            file: ./api_yamdb/Dockerfile
            tags: kapshtykas/db
        - name: Build and Push PhpMyAdmin image
          uses: docker/build-push-action@v2 
          with:
            push: true
            file: ./phpmyadmin/Dockerfile
            tags: kapshtykas/phpmyadmin
        - name: Build and Push www image
          uses: docker/build-push-action@v2 
          with:
            push: true
            file: ./api_yamdb/Dockerfile
            tags: kapshtykas/www
        - name: Build and Push frontend image
          uses: docker/build-push-action@v2 
          with:
            push: true
            file: ./summer-frontend/Dockerfile
            tags: kapshtykas/frontend
  deploy:
    if: github.ref_name == ${{ vars.CONDITION }} 
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: Execute remote SSH commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker-compose stop
            sudo docker-compose rm web
            sudo docker pull kapshtykas/www
            sudo docker pull kapshtykas/nginx
            sudo docker pull kapshtykas/db
            sudo docker pull kapshtykas/phpmyadmin
            sudo docker pull kapshtykas/frontend
            touch web/.env
            echo "APP_ENV=${{ secrets.APP_ENV }}" >> web/.env
            echo "APP_SECRET=${{ secrets.APP_SECRET }}" >> web/.env
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> web/.env
            echo "CORS_ALLOW_ORIGIN=${{ secrets.CORS_ALLOW_ORIGIN }}" >> web/.env
            echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> web/.env
            echo "JWT_PUBLIC_KEY=${{ secrets.JWT_PUBLIC_KEY }}" >> web/.env
            echo "JWT_PASSPHRASE=${{ secrets.JWT_PASSPHRASE }}" >> web/.env
            sudo docker-compose up -d
